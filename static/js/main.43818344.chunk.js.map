{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","images","step","frameSize","itemWidth","animationDuration","infinite","useState","startImage","setStartImage","lastVisible","length","isCarouselStart","isCarouselEnd","translateValue","className","style","width","map","img","transform","transition","src","alt","type","disabled","onClick","nextStartImg","App","state","handleChange","event","target","name","value","checked","setState","prevState","this","htmlFor","id","min","max","onChange","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.43818344.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n  infinite: boolean;\n};\n\nexport const Carousel: React.FC<Props> = ({\n  images,\n  step,\n  frameSize,\n  itemWidth,\n  animationDuration,\n  infinite,\n}) => {\n  const [startImage, setStartImage] = useState(1);\n\n  const lastVisible = images.length - frameSize + 1;\n  const isCarouselStart = startImage === 1;\n  const isCarouselEnd = startImage === lastVisible;\n  const translateValue = itemWidth * (startImage - 1);\n\n  const scrollForward = () => {\n    if (!isCarouselEnd) {\n      const nextStartImg = startImage + step;\n\n      setStartImage(nextStartImg > lastVisible\n        ? lastVisible\n        : nextStartImg);\n    } else if (infinite) {\n      setStartImage(1);\n    }\n  };\n\n  const scrollBack = () => {\n    if (!isCarouselStart) {\n      const nextStartImg = startImage - step;\n\n      setStartImage(nextStartImg < 1\n        ? 1\n        : nextStartImg);\n    } else if (isCarouselStart && infinite) {\n      setStartImage(lastVisible);\n    }\n  };\n\n  return (\n    <>\n      <div className=\"Carousel\">\n        <ul\n          className=\"Carousel__list\"\n          style={{ width: frameSize * itemWidth }}\n        >\n          {images.map((img) => (\n            <li\n              key={img}\n              style={{\n                transform: `translateX(-${translateValue}px)`,\n                transition: `transform ${animationDuration}ms ease`,\n              }}\n            >\n              <img\n                src={img}\n                alt={img}\n                width={itemWidth}\n              />\n            </li>\n          ))}\n        </ul>\n\n        <div className=\"Carousel__buttons\">\n          <button\n            type=\"button\"\n            disabled={isCarouselStart && !infinite}\n            className=\"Carousel__button\"\n            onClick={scrollBack}\n          >\n            {'<'}\n          </button>\n          <button\n            data-cy=\"next\"\n            type=\"button\"\n            disabled={isCarouselEnd && !infinite}\n            className=\"Carousel__button\"\n            onClick={scrollForward}\n          >\n            {'>'}\n          </button>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport { Carousel } from './components/Carousel';\n\ninterface State {\n  images: string[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n  infinite: boolean;\n}\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n    infinite: false,\n  };\n\n  handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const {\n      name,\n      value,\n      checked,\n      type,\n    } = event.target;\n\n    this.setState(prevState => ({\n      ...prevState,\n      [name]: type === 'checkbox'\n        ? checked\n        : +value,\n    }));\n  };\n\n  render() {\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinite,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 data-cy=\"title\">\n          {`Carousel with ${images.length} images`}\n        </h1>\n\n        <div className=\"inputs\">\n          <label htmlFor=\"itemId\">\n            Image width:\n          </label>\n          <input\n            type=\"number\"\n            name=\"itemWidth\"\n            id=\"itemId\"\n            value={itemWidth}\n            min={10}\n            max={300}\n            onChange={this.handleChange}\n          />\n\n          <label htmlFor=\"frameId\">\n            Frame size:\n          </label>\n          <input\n            type=\"number\"\n            name=\"frameSize\"\n            id=\"frameId\"\n            value={frameSize}\n            min={1}\n            max={10}\n            onChange={this.handleChange}\n          />\n\n          <label htmlFor=\"stepId\">\n            Step:\n          </label>\n          <input\n            type=\"number\"\n            name=\"step\"\n            id=\"stepId\"\n            value={step}\n            min={1}\n            max={10}\n            onChange={this.handleChange}\n          />\n\n          <label htmlFor=\"animationDurationId\">\n            Animation duration:\n          </label>\n          <input\n            type=\"number\"\n            name=\"animationDuration\"\n            id=\"animationDurationId\"\n            min={300}\n            max={3000}\n            step={100}\n            value={animationDuration}\n            onChange={this.handleChange}\n          />\n\n          <label htmlFor=\"infiniteId\">\n            Infinite:\n          </label>\n          <input\n            type=\"checkbox\"\n            name=\"infinite\"\n            id=\"infiniteId\"\n            checked={infinite}\n            onChange={this.handleChange}\n          />\n        </div>\n\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n          infinite={infinite}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}